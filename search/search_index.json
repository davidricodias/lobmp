{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"LOBMP","text":"<p>Limit Order Book Message Processor is a Python package designed to transform raw lseg(aka Refinitiv) high frequency trading data into convenient formats such as parquet.</p> <p>Package under development</p> <p>Please keep in mind this a package under development, so bugs are expected and functionality is not guaranteed to be 100% correct.</p> <p>If you want to quickstart using <code>lobmp</code> please see the quickstart page.</p>"},{"location":"quickstart/","title":"Quickstart","text":"In\u00a0[1]: Copied! <pre>content = \"\"\"LOBMP.MC,Market By Price,2025-03-04T16:01:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0\n,,,,Summary,,,,,,,,,3\n,,,,FID,3855,,QUOTIM_MS,50187282,\n,,,,FID,4148,,TIMACT_MS,50187282,\n,,,,FID,14269,,TIMACT_NS,16:01:39.983017253,\n,,,,MapEntry,,UPDATE,,,,,,1100.300000_B,8\n,,,,FID,266,,BID_TIME,13:56:27.000000000,\n,,,,FID,3427,,ORDER_PRC,1100.3,\n,,,,FID,3428,,ORDER_SIDE,1,BID\n,,,,FID,3430,,NO_ORD,10,\n,,,,FID,4356,,ACC_SIZE,100,\n,,,,FID,6527,,LV_TIM_MS,50187282,\n,,,,FID,6529,,LV_DATE,2025-04-25,\n,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253,\nLOBMP.MC,Market By Price,2025-03-04T16:02:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0\n,,,,Summary,,,,,,,,,3\n,,,,FID,3855,,QUOTIM_MS,50187282,\n,,,,FID,4148,,TIMACT_MS,50187282,\n,,,,FID,14269,,TIMACT_NS,16:01:39.983017253,\n,,,,MapEntry,,UPDATE,,,,,,1100.40000_B,8\n,,,,FID,266,,BID_TIME,13:56:27.000000000,\n,,,,FID,3427,,ORDER_PRC,11100.455,\n,,,,FID,3428,,ORDER_SIDE,1,BID\n,,,,FID,3430,,NO_ORD,8,\n,,,,FID,4356,,ACC_SIZE,307,\n,,,,FID,6527,,LV_TIM_MS,50187282,\n,,,,FID,6529,,LV_DATE,2025-04-25,\n,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253,\nTEST.MC,Market By Price,2025-03-04T16:01:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0\n,,,,Summary,,,,,,,,,3\n,,,,FID,3855,,QUOTIM_MS,50187282,\n,,,,FID,4148,,TIMACT_MS,50187282,\n,,,,FID,14269,,TIMACT_NS,16:01:39.983017253,\n,,,,MapEntry,,ADD,,,,,,1100.300000_B,8\n,,,,FID,266,,BID_TIME,13:56:27.000000000,\n,,,,FID,3427,,ORDER_PRC,1100.3,\n,,,,FID,3428,,ORDER_SIDE,1,BID\n,,,,FID,3430,,NO_ORD,1,\n,,,,FID,4356,,ACC_SIZE,100,\n,,,,FID,6527,,LV_TIM_MS,50187282,\n,,,,FID,6529,,LV_DATE,2025-04-26,\n,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253,\nTEST.MC,Market By Price,2025-03-04T16:02:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0\n,,,,Summary,,,,,,,,,3\n,,,,FID,3855,,QUOTIM_MS,50187282,\n,,,,FID,4148,,TIMACT_MS,50187282,\n,,,,MapEntry,,ADD,,,,,,1100.40000_B,8\n,,,,FID,266,,BID_TIME,13:56:27.000000000,\n,,,,FID,3427,,ORDER_PRC,11100.455,\n,,,,FID,3428,,ORDER_SIDE,1,BID\n,,,,FID,3430,,NO_ORD,2,\n,,,,FID,4356,,ACC_SIZE,307,\n,,,,FID,6527,,LV_TIM_MS,50187282,\n,,,,FID,6529,,LV_DATE,2025-04-26,\n,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253,\n\"\"\"\nwith open(\"testfile_lobmp.csv\", \"w\") as f:\n    f.write(content)\n</pre> content = \"\"\"LOBMP.MC,Market By Price,2025-03-04T16:01:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0 ,,,,Summary,,,,,,,,,3 ,,,,FID,3855,,QUOTIM_MS,50187282, ,,,,FID,4148,,TIMACT_MS,50187282, ,,,,FID,14269,,TIMACT_NS,16:01:39.983017253, ,,,,MapEntry,,UPDATE,,,,,,1100.300000_B,8 ,,,,FID,266,,BID_TIME,13:56:27.000000000, ,,,,FID,3427,,ORDER_PRC,1100.3, ,,,,FID,3428,,ORDER_SIDE,1,BID ,,,,FID,3430,,NO_ORD,10, ,,,,FID,4356,,ACC_SIZE,100, ,,,,FID,6527,,LV_TIM_MS,50187282, ,,,,FID,6529,,LV_DATE,2025-04-25, ,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253, LOBMP.MC,Market By Price,2025-03-04T16:02:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0 ,,,,Summary,,,,,,,,,3 ,,,,FID,3855,,QUOTIM_MS,50187282, ,,,,FID,4148,,TIMACT_MS,50187282, ,,,,FID,14269,,TIMACT_NS,16:01:39.983017253, ,,,,MapEntry,,UPDATE,,,,,,1100.40000_B,8 ,,,,FID,266,,BID_TIME,13:56:27.000000000, ,,,,FID,3427,,ORDER_PRC,11100.455, ,,,,FID,3428,,ORDER_SIDE,1,BID ,,,,FID,3430,,NO_ORD,8, ,,,,FID,4356,,ACC_SIZE,307, ,,,,FID,6527,,LV_TIM_MS,50187282, ,,,,FID,6529,,LV_DATE,2025-04-25, ,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253, TEST.MC,Market By Price,2025-03-04T16:01:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0 ,,,,Summary,,,,,,,,,3 ,,,,FID,3855,,QUOTIM_MS,50187282, ,,,,FID,4148,,TIMACT_MS,50187282, ,,,,FID,14269,,TIMACT_NS,16:01:39.983017253, ,,,,MapEntry,,ADD,,,,,,1100.300000_B,8 ,,,,FID,266,,BID_TIME,13:56:27.000000000, ,,,,FID,3427,,ORDER_PRC,1100.3, ,,,,FID,3428,,ORDER_SIDE,1,BID ,,,,FID,3430,,NO_ORD,1, ,,,,FID,4356,,ACC_SIZE,100, ,,,,FID,6527,,LV_TIM_MS,50187282, ,,,,FID,6529,,LV_DATE,2025-04-26, ,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253, TEST.MC,Market By Price,2025-03-04T16:02:39.983017253Z,+2,Raw,UPDATE,UNSPECIFIED,,,,100,,260,0 ,,,,Summary,,,,,,,,,3 ,,,,FID,3855,,QUOTIM_MS,50187282, ,,,,FID,4148,,TIMACT_MS,50187282, ,,,,MapEntry,,ADD,,,,,,1100.40000_B,8 ,,,,FID,266,,BID_TIME,13:56:27.000000000, ,,,,FID,3427,,ORDER_PRC,11100.455, ,,,,FID,3428,,ORDER_SIDE,1,BID ,,,,FID,3430,,NO_ORD,2, ,,,,FID,4356,,ACC_SIZE,307, ,,,,FID,6527,,LV_TIM_MS,50187282, ,,,,FID,6529,,LV_DATE,2025-04-26, ,,,,FID,14268,,LV_TIM_NS,16:01:39.983017253, \"\"\" with open(\"testfile_lobmp.csv\", \"w\") as f:     f.write(content) In\u00a0[2]: Copied! <pre>! lobmp testfile_lobmp.csv ./output --verbose DEBUG\n</pre> ! lobmp testfile_lobmp.csv ./output --verbose DEBUG <pre>2025-04-26 16:42:36,701 lobmp [MainThread] [DEBUG]  Started with timing: Execute run\n2025-04-26 16:42:36,702 lobmp [MainThread] [INFO]  Counting lines in file and recognising possible FIDs...\n2025-04-26 16:42:36,702 lobmp [MainThread] [INFO]  Found 55 lines in file\n2025-04-26 16:42:36,702 lobmp [MainThread] [DEBUG]  Using 8 CPUs\n2025-04-26 16:42:36,703 lobmp [MainThread] [INFO]  Starting file processing...\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Parsing thread completed successfully\n2025-04-26 16:42:36,719 lobmp [MainThread] [DEBUG]  Writing queue is empty!\n2025-04-26 16:42:36,739 lobmp [MainThread] [DEBUG]  Writing thread completed successfully\n2025-04-26 16:42:36,739 lobmp [MainThread] [DEBUG]  Completed with timing: Execute run (Elapsed: 0.04s)\n</pre> <p>You should now have the following directory structure</p> <pre><code>.\n\u251c\u2500\u2500 output\n\u2502   \u2514\u2500\u2500 testfile_lobmp.parquet\n\u2502       \u2514\u2500\u2500 part-000000.parquet\n\u2514\u2500\u2500 testfile_lobmp.csv\n</code></pre> In\u00a0[3]: Copied! <pre>import polars as pl\n\npath = \"./output/testfile_lobmp.parquet/\"\n\ndf = pl.read_parquet(path)\n</pre> import polars as pl  path = \"./output/testfile_lobmp.parquet/\"  df = pl.read_parquet(path) In\u00a0[4]: Copied! <pre>df\n</pre> df Out[4]: shape: (4, 17)ACC_SIZEBID_TIMEGMT_OFFSETLV_DATELV_TIM_MSLV_TIM_NSMAP_ENTRY_KEYMAP_ENTRY_TYPEMARKET_MESSAGE_TYPENO_ORDORDER_PRCORDER_SIDEQUOTIM_MSTICKERTIMACT_MSTIMACT_NSTIMESTAMPstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstrstr\"100\"\"13:56:27.000000000\"\"+2\"\"2025-04-25\"\"50187282\"\"16:01:39.983017253\"\"1100.300000_B\"\"UPDATE\"\"UPDATE\"\"10\"\"1100.3\"\"BID\"\"50187282\"\"LOBMP.MC\"\"50187282\"\"16:01:39.983017253\"\"2025-03-04T16:01:39.983017253Z\"\"307\"\"13:56:27.000000000\"\"+2\"\"2025-04-25\"\"50187282\"\"16:01:39.983017253\"\"1100.40000_B\"\"UPDATE\"\"UPDATE\"\"8\"\"11100.455\"\"BID\"\"50187282\"\"LOBMP.MC\"\"50187282\"\"16:01:39.983017253\"\"2025-03-04T16:02:39.983017253Z\"\"100\"\"13:56:27.000000000\"\"+2\"\"2025-04-26\"\"50187282\"\"16:01:39.983017253\"\"1100.300000_B\"\"ADD\"\"UPDATE\"\"1\"\"1100.3\"\"BID\"\"50187282\"\"TEST.MC\"\"50187282\"\"16:01:39.983017253\"\"2025-03-04T16:01:39.983017253Z\"\"307\"\"13:56:27.000000000\"\"+2\"\"2025-04-26\"\"50187282\"\"16:01:39.983017253\"\"1100.40000_B\"\"ADD\"\"UPDATE\"\"2\"\"11100.455\"\"BID\"\"50187282\"\"TEST.MC\"\"50187282\"\"\"\"2025-03-04T16:02:39.983017253Z\" <p>Finally you may want to filter and transform some columns to a more useful format</p> In\u00a0[5]: Copied! <pre>df.filter(pl.col(\"TICKER\") == \"TEST.MC\").with_columns(\n    pl.col(\"TIMESTAMP\").str.strptime(pl.Datetime(\"ns\")),\n    pl.col(\"ORDER_PRC\").cast(pl.Decimal, strict=False),\n    pl.col(\"NO_ORD\").cast(pl.Int64, strict=False),\n    pl.col(\"ACC_SIZE\").cast(pl.Int64, strict=False),\n).filter(\n    # Get book changes between 2025-03-04T16:01:00 and 2025-03-04T16:02:00\n    pl.col(\"TIMESTAMP\").is_between(\n        pl.lit(\"2025-03-04T16:01:00.000000000Z\").str.to_datetime(time_unit=\"ns\", time_zone=\"UTC\"),\n        pl.lit(\"2025-03-04T16:02:00.000000000Z\").str.to_datetime(time_unit=\"ns\", time_zone=\"UTC\"),\n        closed=\"left\",\n    )\n)\n</pre> df.filter(pl.col(\"TICKER\") == \"TEST.MC\").with_columns(     pl.col(\"TIMESTAMP\").str.strptime(pl.Datetime(\"ns\")),     pl.col(\"ORDER_PRC\").cast(pl.Decimal, strict=False),     pl.col(\"NO_ORD\").cast(pl.Int64, strict=False),     pl.col(\"ACC_SIZE\").cast(pl.Int64, strict=False), ).filter(     # Get book changes between 2025-03-04T16:01:00 and 2025-03-04T16:02:00     pl.col(\"TIMESTAMP\").is_between(         pl.lit(\"2025-03-04T16:01:00.000000000Z\").str.to_datetime(time_unit=\"ns\", time_zone=\"UTC\"),         pl.lit(\"2025-03-04T16:02:00.000000000Z\").str.to_datetime(time_unit=\"ns\", time_zone=\"UTC\"),         closed=\"left\",     ) ) Out[5]: shape: (1, 17)ACC_SIZEBID_TIMEGMT_OFFSETLV_DATELV_TIM_MSLV_TIM_NSMAP_ENTRY_KEYMAP_ENTRY_TYPEMARKET_MESSAGE_TYPENO_ORDORDER_PRCORDER_SIDEQUOTIM_MSTICKERTIMACT_MSTIMACT_NSTIMESTAMPi64strstrstrstrstrstrstrstri64decimal[*,3]strstrstrstrstrdatetime[ns, UTC]100\"13:56:27.000000000\"\"+2\"\"2025-04-26\"\"50187282\"\"16:01:39.983017253\"\"1100.300000_B\"\"ADD\"\"UPDATE\"11100.300\"BID\"\"50187282\"\"TEST.MC\"\"50187282\"\"16:01:39.983017253\"2025-03-04 16:01:39.983017253 UTC"},{"location":"quickstart/#quickstart","title":"Quickstart\u00b6","text":""},{"location":"quickstart/#install","title":"Install\u00b6","text":"<p>The package is available through PyPi</p> <pre>pip install --upgrade lobmp\n</pre> <p>Once installed you can run the following jupyter cells to run the example. The program will generate the output directory structure for you: be aware of overwriting existing folders!</p>"}]}